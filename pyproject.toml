[project]
name = "person_image_segmentation"
version = "0.0.1"
description = "A short description of the project."
authors = [
  { name = "YOLOs" },
]

readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    
]
requires-python = "~=3.10"

[tool.black]
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.ruff.lint.isort]
known_first_party = ["person_image_segmentation"]
force_sort_within_sections = true

[tool.poetry]
name = "person_image_segmentation"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
pandas = "2.1.4"
numpy = "<2.0"
scikit-learn = "1.3.2"
scipy = "1.10.1"
dvc = "^3.55.2"
opendatasets = "^0.1.22"
ipykernel = "^6.29.5"
python-dotenv = "^1.0.1"
opencv-python = "^4.10.0.84"
pillow = "^10.4.0"
torch = "2.2.2"
ultralytics = "^8.3.5"
codecarbon = "^2.7.1"
mlflow = "^2.16.2"
dagshub = "^0.3.37"
loguru = "^0.7.2"
deepchecks = {extras = ["vision"], version = "^0.18.1"}
fastapi = "^0.115.2"
uvicorn = {extras = ["standard"], version = "^0.31.1"}
python-multipart = "^0.0.12"
pydantic = "^2.9.2"


[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
pylint = "^3.3.0"
pytest = "^8.3.3"
ipykernel = "^6.29.5"
pytest-cov = "^5.0.0"
httpx = "^0.27.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
omit = ["person_image_segmentation/pipelines/*", "person_image_segmentation/modeling/*", "notebooks/*"]

[tool.pytest.ini_options]
pythonpath = "."
testpaths = "tests"
addopts = "--junitxml=out/tests-report.xml --cov=person_image_segmentation --cov-report=html:reports/coverage"